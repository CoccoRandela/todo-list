(()=>{"use strict";var e={870:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,"/* Header */\n\ndiv.project-list-head, div.project-head {\n    display: flex;\n}\n\ndiv.project-list-head > h1, div.project-head > h1 {\n    margin: 0;\n}\n\n/* Project list */\n\n.content > div.projects-container {\n    min-height: 90%;\n    display: grid; \n    grid-auto-rows: minmax(min-content, max-content);\n}\n\n/* Projects */\n\ndiv.project {\n    min-width: 100%;\n    display: flex;\n    justify-content: space-between;\n    justify-self: center;\n    border: 1px solid black;\n}\n\n/* New Project button */\n\n.project-list-head > .new-project-btn , .project-head > .new-todo-btn {\n    margin-left: auto;\n}\n\n/* Form */\n\n.content > div.form-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    min-width: 100%;\n    min-height: 100%;\n    display: grid;\n}\n\ndiv.form-container > form.new-project-form {\n    align-self: center;\n    justify-self: center;\n}\n\nform.new-project-form > div {\n    display: flex;\n    flex-direction: column;\n}\n\n\n","",{version:3,sources:["webpack://./src/pages/indexes/styles.css"],names:[],mappings:"AAAA,WAAW;;AAEX;IACI,aAAa;AACjB;;AAEA;IACI,SAAS;AACb;;AAEA,iBAAiB;;AAEjB;IACI,eAAe;IACf,aAAa;IACb,gDAAgD;AACpD;;AAEA,aAAa;;AAEb;IACI,eAAe;IACf,aAAa;IACb,8BAA8B;IAC9B,oBAAoB;IACpB,uBAAuB;AAC3B;;AAEA,uBAAuB;;AAEvB;IACI,iBAAiB;AACrB;;AAEA,SAAS;;AAET;IACI,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,eAAe;IACf,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B",sourcesContent:["/* Header */\n\ndiv.project-list-head, div.project-head {\n    display: flex;\n}\n\ndiv.project-list-head > h1, div.project-head > h1 {\n    margin: 0;\n}\n\n/* Project list */\n\n.content > div.projects-container {\n    min-height: 90%;\n    display: grid; \n    grid-auto-rows: minmax(min-content, max-content);\n}\n\n/* Projects */\n\ndiv.project {\n    min-width: 100%;\n    display: flex;\n    justify-content: space-between;\n    justify-self: center;\n    border: 1px solid black;\n}\n\n/* New Project button */\n\n.project-list-head > .new-project-btn , .project-head > .new-todo-btn {\n    margin-left: auto;\n}\n\n/* Form */\n\n.content > div.form-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    min-width: 100%;\n    min-height: 100%;\n    display: grid;\n}\n\ndiv.form-container > form.new-project-form {\n    align-self: center;\n    justify-self: center;\n}\n\nform.new-project-form > div {\n    display: flex;\n    flex-direction: column;\n}\n\n\n"],sourceRoot:""}]);const c=i},28:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,"/*Homepage styles*/\n:root {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    height: 100vh;\n}\n\nheader > h2 {\n    margin: 0;\n}\n\ndiv.container {\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: 1fr 4fr;\n}\n\ndiv.content {\n    /*min-height: 100%;*/\n    flex-grow: 1;\n    \n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,kBAAkB;AAClB;IACI,sBAAsB;AAC1B;;;AAGA;IACI,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,oBAAoB;IACpB,YAAY;;AAEhB",sourcesContent:["/*Homepage styles*/\n:root {\n    box-sizing: border-box;\n}\n\n\nbody {\n    margin: 0;\n    height: 100vh;\n}\n\nheader > h2 {\n    margin: 0;\n}\n\ndiv.container {\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: 1fr 4fr;\n}\n\ndiv.content {\n    /*min-height: 100%;*/\n    flex-grow: 1;\n    \n}\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=o.base?s[0]+o.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var p=t(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var m=r(A,o);o.byIndex=c,n.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=o(e,r),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),i=t.n(a),c=t(565),s=t.n(c),d=t(216),l=t.n(d),u=t(589),p=t.n(u),A=t(28),m={};function f(e,n){const t=document.createElement("div");t.classList.add(n);const o=document.createElement("h1");return o.textContent=e,t.append(o),t}function h(e,n){const t=document.createElement("button");return t.classList.add(e),t.textContent="+",t.addEventListener("click",n),t}function v(e,n,t){const o=document.createElement("div");o.classList.add(n);for(let n of e)o.append(t(n));return o}m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),n()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;class g{constructor(e){this.name=e}todos=[];addTodo(e){this.todos.push(e),this.populateStorage()}removeTodo(e){this.todos=this.todos.filter((n=>n!==e)),this.populateStorage()}populate(){return JSON.parse(localStorage.getItem(`${this.name}-todos`))}populateStorage(){localStorage.setItem(`${this.name}-todos`,JSON.stringify(this.todos))}}const y={list:null,populate:()=>JSON.parse(localStorage.getItem("projects-list")),populateStorage(){localStorage.setItem("projects-list",JSON.stringify(this.list))},addProject(e){const n=new g(e);return this.list.push(n),this.populateStorage(),n},removeProject(e){this.list=this.list.filter((n=>n!==e)),this.populateStorage()},get(){return this.populate()?this.list=this.populate():(this.list=new Array,this.populateStorage(this.list)),this.list}};function C(e){const n=document.createElement("div");n.classList.add("project");const t=document.createElement("p");t.textContent=e.name,t.addEventListener("click",(()=>{!function(e){for(;e.hasChildNodes();)e.removeChild(e.lastChild)}(document.querySelector(".content")),function(e){const n=document.querySelector(".content"),t=f(e.name,"project-head"),o=v(e.todos,"todo-container",console.log("yo")),r=h("new-todo-btn",b);t.append(r),n.append(t,o)}(e)}));const o=document.createElement("button");return o.addEventListener("click",(()=>{!function(e,n){y.removeProject(e),n.remove()}(e,n)})),o.textContent="delete",n.append(t,o),n}function b(e){}function j(){const e=document.createElement("div");e.classList.add("form-container");const n=document.createElement("form");n.classList.add("new-todo-form");const t=document.createElement("div"),o=document.createElement("label");o.textContent="Name",o.setAttribute("for","name");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","name"),t.append(o,r);const a=document.createElement("button");return a.textContent="Create Project",a.setAttribute("type","button"),a.addEventListener("click",(()=>{(function(){const e=document.querySelector(".projects-container"),n=C(y.addProject(document.querySelector("form").querySelector("input").value));e.append(n)})(),document.querySelector(".form-container").remove()})),n.append(t,a),e.append(n),e}var I=t(870),B={};B.styleTagTransform=p(),B.setAttributes=s(),B.insert=i().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=l(),n()(I.Z,B),I.Z&&I.Z.locals&&I.Z.locals,function(){const e=document.querySelector(".content"),n=f("Projects","project-list-head"),t=v(y.get(),"projects-container",C),o=h("new-project-btn",(()=>function(e,n){const t=e();n.appendChild(t)}(j,e)));n.append(o),e.append(n,t)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,